<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_red_fighter</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>artonaumist = true


max_hull_integrity = 1000
hull_integrity= 1000
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check_released(ord("Q")){
    if !artonaumist and distance_to_object(obj_ship &lt; 10){
        artonaumist = true;
        with obj_astronaut instance_destroy();
    } else if artonaumist artonaumist = false; instance_create(lengthdir_x(10,image_angle + 90), lengthdir_y(10,image_angle + 90), obj_astronaut);
}

if (artonaumist){

if (keyboard_check(ord("A"))) {
if speed &gt; 0{
direction += 3 ;
}
image_angle = direction;
}

if (keyboard_check(ord("D"))) {
if speed &gt; 0{
direction -= 3;
}
image_angle = direction;
}

if (keyboard_check(ord("W"))) {
if (speed &lt; 10){ speed += 0.04;}
}

if (keyboard_check(ord("S"))) {
if (speed &gt; 0) {
speed -= 0.06;
}
}

if (keyboard_check(vk_space)) {
laser_direction = direction
instance_create(x, y, obj_laser);
}

} else {}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fnt_wtf_gui);
draw_set_colour(c_white);

// draw the waypoint

draw_set_colour(c_red);
draw_line_width(30, 90, 30+lengthdir_x(20,point_direction(x,y,obj_waypoint.x,obj_waypoint.y)), 90+lengthdir_y(20,point_direction(x,y,obj_waypoint.x,obj_waypoint.y)), 5);
draw_set_colour(c_white);
draw_set_valign(fa_middle);
draw_text(60, 90, string(round(distance_to_object(obj_waypoint))) + " fms");
draw_set_valign(fa_top);

// draw the integrity

draw_text(30, 30, string(hull_integrity) + " / " + string(max_hull_integrity))

draw_set_colour(c_black);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw ship dock text thing.

draw_self();
if (distance_to_point(obj_station_sirus.x,obj_station_sirus.y) &lt; 200){
    draw_set_font(fnt_wtf);
    draw_set_colour(c_white);
    draw_set_halign(fa_center);
    draw_text(obj_station_sirus.x, obj_station_sirus.y, "Press [E]#to dock.")
    if (keyboard_check(ord("E"))){};
}
draw_set_colour(c_black);
draw_set_halign(fa_left);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
